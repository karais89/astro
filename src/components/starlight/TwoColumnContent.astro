---
import config from 'virtual:starlight/user-config';

const DEFAULT_TOC = { minHeadingLevel: 2, maxHeadingLevel: 3 };
const PAGE_TITLE_ID = '_top';

const { starlightRoute, t } = Astro.locals;
const isSplash = starlightRoute.entry?.data?.template === 'splash';

function normalizeTocConfig(rawConfig) {
	if (rawConfig === false) return undefined;
	if (rawConfig === true || rawConfig === undefined) return { ...DEFAULT_TOC };
	if (rawConfig && typeof rawConfig === 'object') {
		const { minHeadingLevel, maxHeadingLevel } = rawConfig;
		return {
			minHeadingLevel: minHeadingLevel ?? DEFAULT_TOC.minHeadingLevel,
			maxHeadingLevel: maxHeadingLevel ?? DEFAULT_TOC.maxHeadingLevel,
		};
	}
	return undefined;
}

function buildToc(headings, tocConfig) {
	const filtered = (headings ?? []).filter(
		({ depth }) => depth >= tocConfig.minHeadingLevel && depth <= tocConfig.maxHeadingLevel
	);
	const root = { depth: 2, slug: PAGE_TITLE_ID, text: t('tableOfContents.overview'), children: [] };
	const items = [root];
	for (const heading of filtered) {
		injectTocItem(items, { ...heading, children: [] });
	}
	return items;
}

function injectTocItem(items, item) {
	const last = items.at(-1);
	if (!last || last.depth >= item.depth) {
		items.push(item);
		return;
	}
	injectTocItem(last.children, item);
}

if (isSplash && !starlightRoute.toc) {
	const frontmatterToc = starlightRoute.entry?.data?.tableOfContents;
	const resolvedConfig = normalizeTocConfig(
		frontmatterToc !== undefined ? frontmatterToc : config.tableOfContents
	);
	if (resolvedConfig) {
		const items = buildToc(starlightRoute.headings ?? [], resolvedConfig);
		if (items.length > 1) {
			starlightRoute.toc = { ...resolvedConfig, items };
		}
	}
}

const hasToc = Boolean(starlightRoute.toc);
---

{
	isSplash ? (
		<>
			<div class={['splash-content-shell', hasToc && 'splash-content-shell--with-toc'].filter(Boolean).join(' ')}>
				{hasToc && (
					<aside class="splash-floating-toc print:hidden" aria-label="On this page">
						<div class="splash-floating-toc__inner">
							<slot name="right-sidebar" />
						</div>
					</aside>
				)}
				<div class="splash-main-pane">
					<slot />
				</div>
			</div>
			{hasToc && (
				<script>
					document.documentElement.setAttribute('data-has-toc', '');
				</script>
			)}
		</>
	) : (
		<div class="lg:sl-flex">
			{
				starlightRoute.toc && (
					<aside class="right-sidebar-container print:hidden">
						<div class="right-sidebar">
							<slot name="right-sidebar" />
						</div>
					</aside>
				)
			}
			<div class="main-pane"><slot /></div>
		</div>
	)
}

<style>
	@layer starlight.core {
		.splash-content-shell {
			display: block;
			margin-inline: auto;
			max-width: var(--sl-content-width);
		}

		.splash-main-pane {
			position: relative;
		}

		.splash-floating-toc {
			margin-top: 2.5rem;
			width: 100%;
		}

		.splash-floating-toc__inner {
			position: relative;
		}

		@media (min-width: 72rem) {
			.splash-content-shell {
				display: flex;
				gap: clamp(2rem, 5vw, 4rem);
				justify-content: center;
				max-width: none;
			}

			.splash-main-pane {
				flex: 0 1 var(--sl-content-width);
				min-width: 0;
				order: 1;
			}

			.splash-content-shell--with-toc {
				padding-inline-end: clamp(0rem, 8vw, 6rem);
			}

			.splash-floating-toc {
				flex: 0 0 clamp(14rem, 18vw, 20rem);
				margin-top: 0;
				order: 2;
			}

			.splash-floating-toc__inner {
				position: sticky;
				top: calc(var(--sl-nav-height) + 1.5rem);
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel) {
				position: relative;
				width: 100%;
				padding: 1.5rem 1.6rem 1.6rem calc(1.6rem + 6px);
				border-radius: 1.05rem;
				background: color-mix(in srgb, var(--sl-color-bg-sidebar) 90%, transparent 10%);
				border: 1px solid color-mix(in srgb, var(--sl-color-hairline) 68%, transparent 32%);
				box-shadow: 0 24px 46px rgba(15, 23, 42, 0.12);
				backdrop-filter: blur(18px);
				color: var(--sl-color-text);
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel::after) {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				bottom: 0;
				width: 6px;
				border-radius: 1.05rem 0 0 1.05rem;
				background: linear-gradient(
					180deg,
					rgb(248, 163, 139) 0%,
					rgb(232, 172, 205) 33%,
					rgb(162, 182, 243) 66%,
					rgb(127, 218, 235) 100%
				);
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel nav) {
				display: grid;
				gap: 1rem;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel nav) {
				display: grid;
				gap: 0.9rem;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel h2) {
				margin: 0;
				font-size: var(--sl-text-xs);
				font-weight: 600;
				letter-spacing: 0.12em;
				text-transform: uppercase;
				color: color-mix(in srgb, var(--sl-color-text) 60%, transparent 40%);
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel ul) {
				margin: 0;
				padding: 0;
				display: grid;
				gap: 0.4rem;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel .sl-container) {
				width: 100%;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel li) {
				list-style: none;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel a) {
				display: block;
				padding: 0.5rem 0.85rem;
				border-radius: 0.5rem;
				font-size: var(--sl-text-sm);
				color: color-mix(in srgb, var(--sl-color-text) 78%, transparent 22%);
				background: transparent;
				border: 1px solid transparent;
				transition: transform 160ms ease, background 160ms ease, color 160ms ease, border-color 160ms ease;
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel a:hover),
			.splash-floating-toc__inner :global(.right-sidebar-panel a:focus-visible) {
				color: var(--sl-color-text);
				transform: translateX(2px);
				border-color: color-mix(in srgb, var(--sl-color-accent) 35%, transparent 65%);
				background: color-mix(in srgb, transparent 90%, var(--sl-color-accent) 10%);
			}

			.splash-floating-toc__inner :global(.right-sidebar-panel a[aria-current='true']) {
				color: var(--sl-color-text);
				background: color-mix(in srgb, transparent 82%, var(--sl-color-accent) 18%);
				border-color: color-mix(in srgb, var(--sl-color-accent) 55%, transparent 45%);
				font-weight: 600;
			}

			:global(:root[data-theme='dark']) .splash-floating-toc__inner :global(.right-sidebar-panel) {
				background: color-mix(in srgb, var(--sl-color-bg-sidebar) 78%, rgba(15, 23, 42, 0.18) 22%);
				border-color: color-mix(in srgb, var(--sl-color-hairline-light) 80%, transparent 20%);
				box-shadow: 0 28px 60px rgba(2, 6, 23, 0.6);
			}

			:global(:root[data-theme='dark']) .splash-floating-toc__inner :global(.right-sidebar-panel a) {
				color: var(--sl-color-gray-3);
				background: color-mix(in srgb, transparent 96%, rgba(148, 163, 184, 0.22) 4%);
			}

			:global(:root[data-theme='dark']) .splash-floating-toc__inner :global(.right-sidebar-panel a:hover),
			:global(:root[data-theme='dark']) .splash-floating-toc__inner :global(.right-sidebar-panel a:focus-visible) {
				background: color-mix(in srgb, transparent 86%, rgba(96, 165, 250, 0.45) 14%);
				border-color: color-mix(in srgb, rgba(96, 165, 250, 0.6) 60%, transparent 40%);
			}

			:global(:root[data-theme='dark']) .splash-floating-toc__inner :global(.right-sidebar-panel a[aria-current='true']) {
				background: color-mix(in srgb, transparent 78%, rgba(59, 130, 246, 0.5) 22%);
				border-color: rgba(59, 130, 246, 0.6);
			}
		}

		/* Original layout styles for doc template */
		.main-pane {
			isolation: isolate;
		}

		@media (min-width: 72rem) {
			.right-sidebar-container {
				order: 2;
				position: relative;
				width: calc(
					var(--sl-sidebar-width) + (100% - var(--sl-content-width) - var(--sl-sidebar-width)) / 2
				);
			}

			.right-sidebar {
				position: fixed;
				top: 0;
				border-inline-start: 1px solid var(--sl-color-hairline);
				padding-top: var(--sl-nav-height);
				width: 100%;
				height: 100vh;
				overflow-y: auto;
				scrollbar-width: none;
			}

			.main-pane {
				width: 100%;
			}

			:global([data-has-sidebar][data-has-toc]) .main-pane {
				--sl-content-margin-inline: auto 0;

				order: 1;
				width: calc(
					var(--sl-content-width) + (100% - var(--sl-content-width) - var(--sl-sidebar-width)) / 2
				);
			}
		}
	}
</style>
