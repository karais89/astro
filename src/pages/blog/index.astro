---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import RecentPosts from "../../components/RecentPosts.astro";
import { getCollection } from 'astro:content';

const base = import.meta.env.BASE_URL || '/';

// All blog posts (for a simple index list)
const posts = (await getCollection('docs', ({ id, data }) => id.startsWith('blog/') && !(data as any)?.draft))
  .filter((p) => (p.data as any)?.date || (p.data as any)?.createdAt)
  .sort((a, b) => {
    const ad = new Date(((a.data as any)?.date ?? (a.data as any)?.createdAt) as string).getTime();
    const bd = new Date(((b.data as any)?.date ?? (b.data as any)?.createdAt) as string).getTime();
    return bd - ad;
  });
const hrefFor = (entry: any) => `${base}${(entry as any).slug ?? (entry as any).id}/`;

const RECENT_COUNT = 6;

const frontmatter = {
  title: '블로그',
  description: '최근 글, 아카이브 · 태그 탐색',
  editUrl: 'https://github.com/Lonpeach/astro/edit/main/src/pages/blog/index.astro',
};
---
<StarlightPage frontmatter={frontmatter} hasSidebar={false}>
  <RecentPosts count={RECENT_COUNT} sections={["blog"]} variant="list" />

  <nav class="chips-nav" aria-label="탐색">
    <a class="chip" href={`${base}blog/archive/`}>아카이브</a>
    <a class="chip" href={`${base}tags/`}>태그</a>
  </nav>

  <section aria-labelledby="all-posts">
    <h2 id="all-posts">전체 글</h2>
    {posts.length === 0 ? (
      <p>게시된 글이 없습니다.</p>
    ) : (
      <div class="grid">
        {posts.slice(RECENT_COUNT).map((post) => {
          const data: any = post.data as any;
          const href = hrefFor(post);
          const title = data?.title ?? (post as any).slug ?? post.id;
          const d = new Date(((data?.date ?? data?.createdAt) as string) ?? '');
          const dateStr = isNaN(d.getTime()) ? '' : d.toISOString().slice(0, 10);
          const desc = data?.description as string | undefined;
          const tags = (data?.tags as string[] | undefined) ?? [];
          return (
            <article class="card">
              <div class="meta">
                {dateStr && <time datetime={dateStr} class="date">{dateStr}</time>}
              </div>
              <h3 class="title"><a class="link" href={href}>{title}</a></h3>
              {desc && <p class="desc">{desc}</p>}
              {tags.length > 0 && (
                <div class="tags">
                  {tags.slice(0, 5).map((t) => (
                    <a class="tag" href={`${base}tags/${encodeURIComponent(t)}/`}>{t}</a>
                  ))}
                </div>
              )}
            </article>
          );
        })}
      </div>
    )}
  </section>
</StarlightPage>

<style>
  .chips-nav { display: flex; gap: 0.5rem; flex-wrap: wrap; margin: 1rem 0 1.25rem; }
  .chip { display: inline-block; padding: 0.4rem 0.8rem; border-radius: 999px; border: 1px solid var(--sl-color-gray-6); background: color-mix(in hsl, var(--sl-color-gray-7) 35%, transparent); color: var(--sl-color-text); text-decoration: none; font-weight: 700; }
  .chip:hover, .chip:focus { border-color: var(--sl-color-gray-5); }

  .grid { display: grid; gap: 1rem; grid-template-columns: 1fr; }
  @media (min-width: 48rem) { .grid { grid-template-columns: repeat(2, 1fr); } }
  .card { border: 1px solid var(--sl-color-gray-6); border-radius: 0.9rem; padding: 1rem; background: color-mix(in hsl, var(--sl-color-gray-7) 40%, transparent); transition: transform 140ms ease, border-color 140ms ease, background 140ms ease; }
  .card:hover, .card:focus-within { transform: translateY(-2px); border-color: var(--sl-color-gray-5); background: color-mix(in hsl, var(--sl-color-gray-7) 55%, transparent); }
  .meta { display: flex; justify-content: flex-end; }
  .date { color: var(--sl-color-gray-2); font-variant-numeric: tabular-nums; }
  .title { margin: 0.25rem 0 0.25rem 0; font-size: 1.05rem; line-height: 1.35; }
  .link { color: var(--sl-color-text); text-decoration: none; font-weight: 700; }
  .link:hover, .link:focus { text-decoration: underline; }
  .desc { margin: 0 0 0.5rem 0; color: var(--sl-color-gray-2); }
  .tags { display: flex; gap: 0.375rem; flex-wrap: wrap; }
  .tag { border: 1px solid var(--sl-color-gray-6); border-radius: 999px; padding: 0.125rem 0.5rem; font-size: 0.8rem; color: var(--sl-color-text); background: var(--sl-color-gray-7); text-decoration: none; }
</style>

