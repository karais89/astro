---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = (await getCollection('docs', ({ id, data }) => id.startsWith('blog/') && !(data as any)?.draft))
    .filter((p) => (p.data as any)?.date || (p.data as any)?.createdAt);
  const years = Array.from(
    new Set(
      posts.map((p) => new Date(((p.data as any)?.date ?? (p.data as any)?.createdAt) as string).getFullYear())
    )
  ).sort((a, b) => b - a);
  return years.map((y) => ({ params: { year: String(y) } }));
}

const base = import.meta.env.BASE_URL || '/';
const { year } = Astro.params;
const targetYear = Number(year);
if (!Number.isFinite(targetYear)) {
  throw new Error('유효하지 않은 연도입니다.');
}

const posts = (await getCollection('docs', ({ id, data }) => id.startsWith('blog/') && !(data as any)?.draft))
  .filter((p) => (p.data as any)?.date || (p.data as any)?.createdAt)
  .filter((p) => new Date(((p.data as any)?.date ?? (p.data as any)?.createdAt) as string).getFullYear() === targetYear)
  .sort((a, b) => {
    const ad = new Date(((a.data as any)?.date ?? (a.data as any)?.createdAt) as string).getTime();
    const bd = new Date(((b.data as any)?.date ?? (b.data as any)?.createdAt) as string).getTime();
    return bd - ad;
  });

const frontmatter = {
  title: `${targetYear}년 블로그 아카이브`,
  description: `${targetYear}년에 작성된 글 목록`,
  editUrl: 'https://github.com/karais89/astro/edit/main/src/pages/blog/archive/[year].astro',
};
const hrefFor = (entry: any) => `${base}${(entry as any).slug ?? (entry as any).id}/`;
---
<StarlightPage frontmatter={frontmatter} hasSidebar={false}>
  <p><a href={`${base}blog/archive/`}>아카이브 목록으로</a></p>

  {posts.length === 0 ? (
    <p>해당 연도의 글이 없습니다.</p>
  ) : (
    <ul>
      {posts.map((post) => (
        <li>
          <a href={hrefFor(post)}>{post.data.title ?? (post as any).slug ?? post.id}</a>
          {((post.data as any)?.date || (post.data as any)?.createdAt) && (
            <small style="margin-left: 0.5rem; opacity: 0.7;">
              {new Date(((post.data as any)?.date ?? (post.data as any)?.createdAt) as string).toLocaleDateString()}
            </small>
          )}
        </li>
      ))}
    </ul>
  )}
</StarlightPage>

